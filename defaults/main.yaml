---
kafka_version: 3.6.0
kafka_scala_version: 2.13
kafka_openjdk_version: 17
kafka_download_url: https://dlcdn.apache.org/kafka/{{ kafka_version }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
# must be defined as same as ansible inventory group
kafka_hosts_group: kafka
kafka_user: kafka
kafka_group: kafka
kafka_config_directory: /etc/kafka
kafka_data_directory: /var/lib/kafka
kafka_log_directory: /var/log/kafka
kafka_extra_files: {}
kafka_extra_envs: {}
  #KAFKA_HEAP_OPTS: -Xms4G -Xmx4G
  #KAFKA_JVM_PERFORMANCE_OPTS: -server -XX:MetaspaceSize=128m -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M -XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80 -XX:+ExplicitGCInvokesConcurrent -Djava.awt.headless=true -Duser.timezone=Europe/Moscow
# https://kafka.apache.org/documentation/#brokerconfigs_process.roles
kafka_process_roles: broker,controller
kafka_server_properties: {}
  #auto.create.topics.enable: 'false'
  #default.replication.factor: 2
  #min.insync.replicas: 2
  #message.max.bytes: 10485760
  #num.network.threads: 128
  #num.io.threads: 256
  #num.partitions: 1
  #num.replica.fetchers: 3
  #num.recovery.threads.per.data.dir: 2
  #socket.send.buffer.bytes: -1
  #socket.receive.buffer.bytes: -1
  #socket.request.max.bytes: 104857600
  #offsets.topic.num.partitions: 20
  #offsets.topic.replication.factor: 3
  #transaction.state.log.num.partitions: 20
  #transaction.state.log.replication.factor: 3
  #log.retention.hours: 168
  #log.retention.bytes: -1
  #log.segment.bytes: 104857600
  #log.retention.check.interval.ms: 60000
  #log.flush.scheduler.interval.ms: 1000
kafka_log4j_properties: ""
# enables SASL authorization
kafka_sasl_enabled: false
# enables ACLs
# https://kafka.apache.org/documentation/#security_authz
kafka_acl_enabled: false
# defines a password of default kafka superuser
kafka_password: "changeMe"
# defines extra users
kafka_users:
  admin:
    superuser: true
    password: changeMe
  foo:
    superuser: false
    password: bar
# kafka_opts provides you with an opportunity to define KAFKA_OPTS environment variable
kafka_opts: ""
# enables mirror maker if you need to migrate some data between two or more kafka clusters
# https://kafka.apache.org/documentation/#mirrormakerconfigs
kafka_mirror_maker_enabled: false
kafka_mirror_maker_properties: {}
